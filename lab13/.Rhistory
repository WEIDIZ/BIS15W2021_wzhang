ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)
ggplot(aes(x = "Ethnicity", y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme(axis.line.x = element_text(angle = 60, hjust = 1))
theme_light(base_size = 18)
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = "Ethnicity", y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme(axis.line.x = element_text(angle = 60, hjust = 1))+
theme_light(base_size = 18)+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = "Ethnicity", y = "FilteredCountFR")) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme(axis.line.x = element_text(angle = 60, hjust = 1))+
theme_light(base_size = 18)+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = reorder(Ethnicity, FilteredCountFR), y = "FilteredCountFR")) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme(axis.line.x = element_text(angle = 60, hjust = 1))+
theme_light(base_size = 18)+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = reorder(Ethnicity, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme(axis.line.x = element_text(angle = 60, hjust = 1))+
theme_light(base_size = 18)+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = reorder(Ethnicity, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.line.x = element_text(angle = 60, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = reorder(Ethnicity, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit <- UC_admit %>%
filter(Ethnicity!="Unknown", Ethnicity!="All")
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = reorder(Ethnicity, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
theme_light(base_size = 18)+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = reorder(Ethnicity, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Ethnicity"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010")
), # close the first box
box(title = "UC Admissions by Ethnicity", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Academic_Yr == input$z)%>%
ggplot(aes(x = reorder(Ethnicity, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Ethnicity",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Year"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Unknown")
), # close the first box
box(title = "UC Admissions by Year", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = reorder(Academic_Yr, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Year",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit$Academic_Yr <- as.factor(UC_admit$Academic_Yr)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Year and Ethnicity"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
), # close the first box
box(title = "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Ethnicity==input$y & Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(x = "Year", y = "Enrollment")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Year"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Year", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Unknown")
), # close the first box
box(title = "UC Admissions by Year", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = reorder(Academic_Yr, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Year",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Year"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity.", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Unknown")
), # close the first box
box(title = "UC Admissions by Year", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = reorder(Academic_Yr, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Year",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions by Year"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "UC Campuses", width = 3,
selectInput("x", "Select Campus", choices = c("Berkeley", "Davis", "Irvine", "Los_Angeles", "Merced", "Riverside", "Santa_Barbara","San_Diego", "Santa_Cruz"),
selected = "Berkeley"),
selectInput("y", "Select Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
selectInput("z", "Select Ethnicity", choices = c("Asian", "African American", "American Indian", "Chicano/Latino", "White", "International", "Unknown"),
selected = "Unknown")
), # close the first box
box(title = "UC Admissions by Year", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus == input$x, Category == input$y, Ethnicity == input$z)%>%
ggplot(aes(x = reorder(Academic_Yr, FilteredCountFR), y = FilteredCountFR)) +
geom_col(color="black", fill="steelblue", alpha=0.75)+
theme_light(base_size = 18)+
theme(axis.text.x = element_text(angle = 30, hjust = 1))+
labs(x ="Year",
y = "Number")
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
